const axios = require('axios');

async function getFirstPairAddress() {
    const url = "https://api.dex3.ai/tokenlist/search";
    const body = {
        input: "A3qEKsRTrF6BnbNSRBZWorN9DMqdmqqJxrymyTFjpump", // ho·∫∑c thay input theo √Ω b·∫°n
        type: "tokens"
    };
    try {
        const res = await axios.post(url, body, {
            headers: {
                "Content-Type": "application/json",
                // Th√™m c√°c headers kh√°c n·∫øu API y√™u c·∫ßu, v√≠ d·ª• Authorization, cookie, ...
            }
        });

        const data = res.data?.data || [];
        if (data.length === 0) {
            console.log("Kh√¥ng c√≥ pair n√†o trong k·∫øt qu·∫£ tr·∫£ v·ªÅ!");
            return;
        }
        const firstPair = data[0];
        console.log("Pair ƒë·∫ßu ti√™n:");
        console.log("Pair Address:", firstPair.pair_address);
        console.log("DEX:", firstPair.dex);
        console.log("Symbol:", firstPair.token_symbol);
        // In ra c√°c tr∆∞·ªùng kh√°c n·∫øu c·∫ßn

    } catch (err) {
        if (err.response && err.response.data) {
            console.error('‚ùå L·ªói API:', JSON.stringify(err.response.data));
        } else {
            console.error('‚ùå L·ªói kh√°c:', err.message);
        }
    }
}

// Test v·ªõi nhi·ªÅu token kh√°c nhau
async function testMultipleTokens() {
    const testTokens = [
        "A3qEKsRTrF6BnbNSRBZWorN9DMqdmqqJxrymyTFjpump",
        "9bRHE7sPsFfDvSgFufcHyekNtvN3dFdyMBffT3CAHR3P",
        "2SCXwm9Nbhta6w5sDwA2D61A3kgLLpMjYAAJjRP9StBR",
        "Nzj87dDNPtALb5EUkrpN36VhmLz4WQ5MuWjrep6pump"
    ];

    console.log("üîç Test Search API v·ªõi nhi·ªÅu token:\n");

    for (const token of testTokens) {
        console.log(`\nüìç Testing token: ${token}`);
        await searchPairByToken(token);
        console.log("‚îÄ".repeat(80));
    }
}

// H√†m search pair address t·ª´ token
async function searchPairByToken(tokenInput) {
    const url = "https://api.dex3.ai/tokenlist/search";
    const body = {
        input: tokenInput,
        type: "tokens"
    };
    
    try {
        const res = await axios.post(url, body, {
            headers: {
                "Content-Type": "application/json"
            }
        });

        const data = res.data?.data || [];
        if (data.length === 0) {
            console.log("‚ùå Kh√¥ng c√≥ pair n√†o trong k·∫øt qu·∫£ tr·∫£ v·ªÅ!");
            return null;
        }
        
        console.log(`‚úÖ T√¨m th·∫•y ${data.length} k·∫øt qu·∫£:`);
        
        // Hi·ªÉn th·ªã t·∫•t c·∫£ k·∫øt qu·∫£
        data.forEach((pair, index) => {
            console.log(`  ${index + 1}. Pair: ${pair.pair_address}`);
            console.log(`     DEX: ${pair.dex}`);
            console.log(`     Symbol: ${pair.token_symbol}`);
            console.log(`     Token Address: ${pair.token_address || 'N/A'}`);
            if (index < data.length - 1) console.log();
        });
        
        // Tr·∫£ v·ªÅ pair ƒë·∫ßu ti√™n
        const firstPair = data[0];
        return {
            pairAddress: firstPair.pair_address,
            dex: firstPair.dex,
            symbol: firstPair.token_symbol,
            tokenAddress: firstPair.token_address
        };
    } catch (err) {
        console.error(`‚ùå L·ªói search token ${tokenInput}:`, err.message);
        if (err.response && err.response.data) {
            console.error('Chi ti·∫øt l·ªói:', JSON.stringify(err.response.data, null, 2));
        }
        return null;
    }
}

// Ch·∫°y test
console.log("üöÄ B·∫Øt ƒë·∫ßu test Search API...\n");
testMultipleTokens().then(() => {
    console.log("\n‚úÖ Ho√†n th√†nh test!");
}).catch(err => {
    console.error("‚ùå L·ªói trong qu√° tr√¨nh test:", err.message);
});
